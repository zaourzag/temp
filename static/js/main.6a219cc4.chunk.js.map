{"version":3,"sources":["assets/pokeball.svg","styles/global.ts","pages/Dashboard/styles.ts","helpers/capitalize.ts","components/PokemonType/styles.ts","components/PokemonType/index.tsx","components/PokemonItem/styles.ts","components/PokemonItem/index.tsx","services/api.ts","hooks/useSearch.tsx","helpers/removeDuplicates.ts","hooks/usePokemon.tsx","pages/Dashboard/index.tsx","pages/PokemonDetails/styles.ts","components/PokemonAbout/styles.ts","components/PokemonAbout/index.tsx","components/PokemonEvolutionChain/styles.ts","components/PokemonEvolutionChain/index.tsx","components/PokemonStats/styles.ts","components/PokemonStats/index.tsx","pages/PokemonDetails/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","imgPokeball","Container","styled","div","Header","header","Title","h1","PokemonList","ul","MorePokemonArea","section","shade","Loader","pokeball","Form","form","NoMatchingAlert","capitalizeHelper","name","replace","l","toUpperCase","Type","li","props","type","PokemonType","capitalize","useCallback","Index","span","nameLength","css","Section","sprite","PokemonItem","pokemon","to","id","style","textDecoration","types","length","slice","map","slot","api","axios","create","baseURL","SearchContext","createContext","SearchProvider","children","useState","search","setSearch","Provider","value","useSearch","context","useContext","Error","removeDuplicates","array","filter","resistance","index","indexOf","PokemonContext","PokemonProvider","pokemonList","setPokemonList","getPokemon","a","Promise","resolve","get","pokemonData","data","species","url","substring","speciesData","pokemonTarget","pokemonSpecies","getEvolutionChain","pokemonDetails","chainId","evolution_chain","getPokemonInterval","startId","endId","toString","newPokemon","oldPokemonList","getPokemonSearch","matchSearchPokemon","matchPokemonInfos","push","getContinueSearchList","listPokemonNames","results","matchSearchList","includes","toLowerCase","result","getInitialPokemonList","getWeaknessesAndResistances","allWeaknesses","allResistances","allNoDamages","typeDetails","damage_relations","double_damage_from","doubleDamageType","half_damage_from","halfDamageType","no_damage_from","noDamageType","weaknesses","weakness","sort","resistances","getPokemonImage","getIdVariantDefault","variantDefault","varieties","find","variety","is_default","parseInt","useEffect","usePokemon","Dashboard","loading","setLoading","hasMorePokemon","setHasMorePokemon","handleGetMorePokemon","handleSubmitSearch","event","preventDefault","onSubmit","placeholder","onChange","e","target","disabled","marginRight","transform","sprites","other","front_default","onClick","Nav","nav","PokemonImage","Main","main","LoadingContainer","PokemonAbout","description","height","weight","abilities","className","ability","is_hidden","join","EvoluationsWrap","Stage","Evolution","Name","PokemonEvoluationChain","evolutionChain","handleEvolves","chains","evolve","src","alt","evolves_to","chain","handleFirstStage","StatBar","percentage","PokemonStats","base_stats","stats","setStats","stat","base_stat","reduce","previous","PokemonDetails","params","useRouteMatch","setPokemon","pokemonSpecie","setPokemonSpecie","pokemonWeaknesses","setPokemonWeaknesses","pokemonResistances","setPokemonResistances","idVariantyDefault","pokemonEvolutionChain","setPokemonEvolutionChain","handleGetPokemon","handleGetPokemonWeaknessesAndResistances","pokemonWeaknessesAndResistances","window","scrollTo","flavor_text_entries","text","language","flavor_text","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a219cc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball.30098c99.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport imgPokeball from '../assets/pokeball.svg';\r\n\r\nexport default createGlobalStyle`\r\n  :root {\r\n    --color-bug-type-dark: #66bb6a;\r\n    --color-bug-type-light: #81c784;\r\n\r\n    --color-dark-type-dark: #757575;\r\n    --color-dark-type-light: #9e9e9e;\r\n\r\n    --color-dragon-type-dark: #ff7043;\r\n    --color-dragon-type-light: #ff8a65;\r\n\r\n    --color-electric-type-dark: #ffce4b;\r\n    --color-electric-type-light: #fbe068;\r\n\r\n    --color-fairy-type-dark: #ffab91;\r\n    --color-fairy-type-light: #ffccbc;\r\n\r\n    --color-fighting-type-dark: #ff7043;\r\n    --color-fighting-type-light: #ff8a65;\r\n\r\n    --color-fire-type-dark: #fc6c6d;\r\n    --color-fire-type-light: #fc7e7e;\r\n\r\n    --color-flying-type-dark: #448aff;\r\n    --color-flying-type-light: #82b1ff;\r\n\r\n    --color-ghost-type-dark: #9575cd;\r\n    --color-ghost-type-light: #b39ddb;\r\n\r\n    --color-grass-type-dark: #48d0b0;\r\n    --color-grass-type-light: #61e0c9;\r\n\r\n    --color-ground-type-dark: #ffa726;\r\n    --color-ground-type-light: #ffb74d;\r\n\r\n    --color-ice-type-dark: #64b5f6;\r\n    --color-ice-type-light: #90caf9;\r\n\r\n    --color-normal-type-dark: #90a4ae;\r\n    --color-normal-type-light: #b0bec5;\r\n\r\n    --color-poison-type-dark: #ba68c8;\r\n    --color-poison-type-light: #ce93d8;\r\n\r\n    --color-psychic-type-dark: #f06292;\r\n    --color-psychic-type-light: #f48fb1;\r\n\r\n    --color-rock-type-dark: #a1887f;\r\n    --color-rock-type-light: #bcaaa4;\r\n\r\n    --color-steel-type-dark: #9e9e9e;\r\n    --color-steel-type-light: #bdbdbd;\r\n\r\n    --color-water-type-dark: #76befe;\r\n    --color-water-type-light: #8fd1fd;\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  body {\r\n    background-image: url(${imgPokeball});\r\n    background-color: rgba(255,255,255,0.8);\r\n    background-blend-mode: lighten;\r\n    background-repeat: no-repeat;\r\n    background-size: 70vw;\r\n    background-position-x: 60vw;\r\n    background-position-y: -31vw;\r\n    background-attachment: fixed;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 16px Roboto, sans-serif;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport pokeball from '../../assets/pokeball.svg';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 30px;\r\n\r\n  @media (max-width: 700px) {\r\n    display: block;\r\n    margin: 0 15px 30px 15px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 48px;\r\n  color: #000000;\r\n\r\n  @media (max-width: 700px) {\r\n    font-size: 40px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const PokemonList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 20px;\r\n  margin-bottom: 10px;\r\n\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nexport const MorePokemonArea = styled.section`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 23px 0;\r\n\r\n  button {\r\n    padding: 16px 20px;\r\n    font-weight: bold;\r\n    color: white;\r\n    background-color: #30a7d7;\r\n    border-radius: 5px;\r\n    border: none;\r\n    transition: background-color 0.2s;\r\n\r\n    &:hover {\r\n      background-color: ${shade(0.2, '#30a7d7')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  margin: 30px auto;\r\n  background: url(${pokeball}) no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  input {\r\n    padding: 10px 20px;\r\n    font-size: 17px;\r\n    border: 1px solid white;\r\n    border-right: none;\r\n    float: left;\r\n    width: 80%;\r\n    background: #f1f1f1;\r\n    border-radius: 20px 0 0 20px;\r\n  }\r\n\r\n  button {\r\n    float: left;\r\n    width: 20%;\r\n    padding: 10px;\r\n    color: white;\r\n    font-size: 17px;\r\n    border: 1px solid white;\r\n    border-left: none;\r\n    border-radius: 0 20px 20px 0;\r\n    background-color: #30a7d7;\r\n    transition: background-color 0.2s;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: ${shade(0.2, '#30a7d7')};\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    clear: both;\r\n    display: table;\r\n  }\r\n`;\r\n\r\nexport const NoMatchingAlert = styled.form`\r\n  width: 100%;\r\n  border: 2px solid red;\r\n  border-radius: 20px;\r\n  padding: 10px;\r\n\r\n  h3 {\r\n    color: red;\r\n    font-weight: normal;\r\n    text-align: center;\r\n  }\r\n`;\r\n","export const capitalizeHelper = (name: string) => {\r\n  return name.replace(/\\b\\w/g, l => l.toUpperCase());\r\n};\r\n","import styled from 'styled-components';\r\n\r\ninterface PokemonType {\r\n  type: string;\r\n}\r\n\r\nexport const Type = styled.li<PokemonType>`\r\n  list-style-type: none;\r\n  border-radius: 20px;\r\n  list-style-type: none;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n  padding: 8px 20px;\r\n  margin-bottom: 10px;\r\n  transform: translateY(10px);\r\n  background-color: ${props => `var(--color-${props.type}-type-light)`};\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 3px 15px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import { useCallback } from 'react';\r\n\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\n\r\nimport { Type } from './styles';\r\n\r\ninterface PokemonTypeProps {\r\n  type: string;\r\n}\r\n\r\nexport function PokemonType({ type }: PokemonTypeProps) {\r\n  const capitalize = useCallback(capitalizeHelper, []);\r\n\r\n  return <Type type={type}>{capitalize(type)}</Type>;\r\n}\r\n","import styled, { css } from 'styled-components';\r\n\r\nimport imgPokeball from '../../assets/pokeball.svg';\r\n\r\ninterface ContainerProps {\r\n  type: string;\r\n}\r\n\r\ninterface HeaderProps {\r\n  nameLength: number;\r\n}\r\n\r\ninterface SectionProps {\r\n  sprite: string;\r\n}\r\n\r\nexport const Container = styled.li<ContainerProps>`\r\n  width: 100%;\r\n  height: 205px;\r\n  border-radius: 30px;\r\n  padding: 25px 10px 30px 20px;\r\n  list-style-type: none;\r\n  box-shadow: 0px 0px 15px -5px #595959;\r\n  background-image: url(${imgPokeball});\r\n  background-repeat: no-repeat;\r\n  background-size: 45%;\r\n  background-position: bottom right;\r\n  transition: 0.5s;\r\n  background-color: ${props => `var(--color-${props.type}-type-dark)`};\r\n  background-blend-mode: soft-light;\r\n\r\n  &:hover {\r\n    transform: translate(0, -10px);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Index = styled.span`\r\n  font-weight: 900;\r\n  font-size: 25px;\r\n  opacity: 0.5;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const Header = styled.header<HeaderProps>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  font-weight: bolder;\r\n  font-size: 23px;\r\n  margin-bottom: 15px;\r\n\r\n  h3 {\r\n    transform: translateY(5px);\r\n\r\n    ${props =>\r\n      props.nameLength > 12 &&\r\n      css`\r\n        font-size: 20px;\r\n      `}\r\n  }\r\n`;\r\n\r\nexport const Section = styled.section<SectionProps>`\r\n  display: flex;\r\n  padding-bottom: 20px;\r\n  height: 100%;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  div#pokemon_image {\r\n    ${props =>\r\n      props.sprite &&\r\n      css`\r\n        background-image: url(${props.sprite});\r\n      `}\r\n\r\n    width: 100%;\r\n    background-size: contain;\r\n    background-position: center center;\r\n    background-repeat: no-repeat;\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n","import { useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\nimport { PokemonType } from '../PokemonType';\r\n\r\nimport { Container, Index, Header, Section } from './styles';\r\n\r\ninterface PokemonItemProps {\r\n  pokemon: Pokemon;\r\n  sprite: string;\r\n}\r\n\r\ninterface Pokemon {\r\n  id: number;\r\n  name: string;\r\n  sprites: {\r\n    other: {\r\n      'official-artwork': {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  types: Type[];\r\n}\r\n\r\ninterface Type {\r\n  slot: number;\r\n  type: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport function PokemonItem({ pokemon, sprite }: PokemonItemProps) {\r\n  const capitalize = useCallback(capitalizeHelper, []);\r\n\r\n  return (\r\n    <Link to={`/details/${pokemon.id}`} style={{ textDecoration: 'none' }}>\r\n      <Container type={`${pokemon.types[0].type.name}`}>\r\n        <Header nameLength={pokemon.name.length}>\r\n          <h3>{capitalize(pokemon.name)}</h3>\r\n          <Index>#{`000${pokemon.id}`.slice(-3)}</Index>\r\n        </Header>\r\n        <Section sprite={sprite}>\r\n          <ul>\r\n            {pokemon.types.map(type => (\r\n              <PokemonType key={type.slot} type={type.type.name} />\r\n            ))}\r\n          </ul>\r\n          <div id=\"pokemon_image\" />\r\n        </Section>\r\n      </Container>\r\n    </Link>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://pokeapi.co/api/v2',\r\n});\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useContext,\r\n  useState,\r\n} from 'react';\r\n\r\ninterface SearchContextData {\r\n  search: string;\r\n  setSearch: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst SearchContext = createContext<SearchContextData>({} as SearchContextData);\r\n\r\nconst SearchProvider: React.FC = ({ children }) => {\r\n  const [search, setSearch] = useState<string>('');\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{\r\n        search,\r\n        setSearch,\r\n      }}\r\n    >\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useSearch(): SearchContextData {\r\n  const context = useContext(SearchContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useSearch must be used within a SearchProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { SearchProvider, useSearch };\r\n","export const removeDuplicates = (array: Array<string>) => {\r\n  return array.filter(\r\n    (resistance, index) => array.indexOf(resistance) === index,\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { api } from '../services/api';\r\nimport { useSearch } from './useSearch';\r\nimport { removeDuplicates } from '../helpers/removeDuplicates';\r\n\r\ninterface PokemonContextData {\r\n  pokemonList: Pokemon[];\r\n  setPokemonList: Dispatch<SetStateAction<Pokemon[]>>;\r\n  getPokemon(id: string): Promise<GetPokemonReturn>;\r\n  getEvolutionChain(pokemonDetails: PokemonDetails): Promise<EvolutionChain>;\r\n  getPokemonInterval(startId: number, endId: number): Promise<void>;\r\n  getPokemonSearch(matchSearchPokemon: PokemonName[]): Promise<void>;\r\n  getContinueSearchList(): Promise<void>;\r\n  getWeaknessesAndResistances(types: Type[]): Promise<WeaknessesAndResistances>;\r\n  getPokemonImage(id: string): string;\r\n  getIdVariantDefault(species: PokemonDetails): number;\r\n}\r\n\r\ninterface Pokemon {\r\n  id: number;\r\n  name: string;\r\n  species: {\r\n    url: string;\r\n  };\r\n  sprites: {\r\n    other: {\r\n      'official-artwork': {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  stats: Stat[];\r\n  types: Type[];\r\n  abilities: Ability[];\r\n  height: number;\r\n  weight: number;\r\n}\r\n\r\ninterface Stat {\r\n  base_stat: number;\r\n  stat: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Type {\r\n  slot: number;\r\n  type: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Ability {\r\n  ability: {\r\n    name: string;\r\n  };\r\n  is_hidden: boolean;\r\n}\r\n\r\ninterface PokemonName {\r\n  name: string;\r\n}\r\n\r\ninterface PokemonDetails {\r\n  flavor_text_entries: FlavorTextEntrie[];\r\n  evolution_chain: {\r\n    url: string;\r\n  };\r\n  varieties: Variety[];\r\n}\r\n\r\ninterface EvolutionChain {\r\n  chain: Chain;\r\n}\r\n\r\ninterface Chain {\r\n  evolves_to: Array<Chain>;\r\n  species: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\ninterface FlavorTextEntrie {\r\n  flavor_text: string;\r\n  language: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface WeaknessesAndResistances {\r\n  weaknesses: string[];\r\n  resistances: string[];\r\n}\r\n\r\ninterface TypeDetailsProps {\r\n  damage_relations: {\r\n    double_damage_from: Array<{\r\n      name: string;\r\n    }>;\r\n    half_damage_from: Array<{\r\n      name: string;\r\n    }>;\r\n    no_damage_from: Array<{\r\n      name: string;\r\n    }>;\r\n  };\r\n}\r\n\r\ninterface Variety {\r\n  is_default: boolean;\r\n  pokemon: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\ninterface GetPokemonReturn {\r\n  pokemonTarget: Pokemon;\r\n  pokemonSpecies: PokemonDetails;\r\n}\r\n\r\nconst PokemonContext = createContext<PokemonContextData>(\r\n  {} as PokemonContextData,\r\n);\r\n\r\nconst PokemonProvider: React.FC = ({ children }) => {\r\n  const [pokemonList, setPokemonList] = useState<Pokemon[]>([] as Pokemon[]);\r\n  const { search } = useSearch();\r\n\r\n  const getPokemon = useCallback(async (id: string) => {\r\n    const { data: pokemonData } = await Promise.resolve(\r\n      api.get(`pokemon/${id}`),\r\n    );\r\n\r\n    const { data: speciesData } = await Promise.resolve(\r\n      api.get(pokemonData.species.url.substring(26)),\r\n    );\r\n\r\n    return { pokemonTarget: pokemonData, pokemonSpecies: speciesData };\r\n  }, []);\r\n\r\n  const getEvolutionChain = useCallback(\r\n    async (pokemonDetails: PokemonDetails) => {\r\n      const chainId = pokemonDetails.evolution_chain.url.slice(42, -1);\r\n      const { data } = await Promise.resolve(\r\n        api.get(`evolution-chain/${chainId}`),\r\n      );\r\n\r\n      return data;\r\n    },\r\n    [],\r\n  );\r\n\r\n  const getPokemonInterval = useCallback(\r\n    async (startId: number, endId: number) => {\r\n      for (let index = startId; index <= endId; index++) {\r\n        const newPokemon = await getPokemon(index.toString());\r\n        setPokemonList(oldPokemonList => [\r\n          ...oldPokemonList,\r\n          newPokemon.pokemonTarget,\r\n        ]);\r\n      }\r\n    },\r\n    [getPokemon],\r\n  );\r\n\r\n  const getPokemonSearch = useCallback(\r\n    async (matchSearchPokemon: PokemonName[]) => {\r\n      const matchPokemonInfos: Pokemon[] = [];\r\n\r\n      for (\r\n        let index = 0;\r\n        index < matchSearchPokemon.length && index <= 51;\r\n        index++\r\n      ) {\r\n        const { data } = await Promise.resolve(\r\n          api.get(`pokemon/${matchSearchPokemon[index].name}`),\r\n        );\r\n        matchPokemonInfos.push(data);\r\n      }\r\n\r\n      setPokemonList(matchPokemonInfos);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const getContinueSearchList = useCallback(async (): Promise<void> => {\r\n    const matchPokemonInfos: Pokemon[] = [];\r\n\r\n    const { data } = await Promise.resolve(api.get('pokemon?limit=898'));\r\n    const listPokemonNames: PokemonName[] = data.results;\r\n\r\n    const matchSearchList = listPokemonNames.filter(pokemon => {\r\n      return pokemon.name.includes(search.toLowerCase());\r\n    });\r\n\r\n    for (\r\n      let index = pokemonList.length;\r\n      index < matchSearchList.length && matchPokemonInfos.length <= 51;\r\n      index++\r\n    ) {\r\n      const result = await Promise.resolve(\r\n        api.get(`pokemon/${matchSearchList[index].name}`),\r\n      );\r\n      matchPokemonInfos.push(result.data);\r\n    }\r\n\r\n    setPokemonList(oldPokemonList => [...oldPokemonList, ...matchPokemonInfos]);\r\n  }, [search, pokemonList]);\r\n\r\n  const getInitialPokemonList = useCallback(async () => {\r\n    await getPokemonInterval(1, 52);\r\n  }, [getPokemonInterval]);\r\n\r\n  const getWeaknessesAndResistances = useCallback(\r\n    async (types: Type[]): Promise<WeaknessesAndResistances> => {\r\n      const allWeaknesses: Array<string> = [];\r\n      const allResistances: Array<string> = [];\r\n      const allNoDamages: Array<string> = [];\r\n\r\n      for (let index = 0; index < types.length; index++) {\r\n        const { data } = await Promise.resolve(\r\n          api.get(`type/${types[index].type.name}`),\r\n        );\r\n\r\n        const typeDetails = data as TypeDetailsProps;\r\n\r\n        allWeaknesses.push(\r\n          ...typeDetails.damage_relations.double_damage_from.map(\r\n            doubleDamageType => doubleDamageType.name,\r\n          ),\r\n        );\r\n\r\n        allResistances.push(\r\n          ...typeDetails.damage_relations.half_damage_from.map(\r\n            halfDamageType => halfDamageType.name,\r\n          ),\r\n        );\r\n\r\n        allNoDamages.push(\r\n          ...typeDetails.damage_relations.no_damage_from.map(\r\n            noDamageType => noDamageType.name,\r\n          ),\r\n        );\r\n      }\r\n\r\n      const weaknesses = removeDuplicates(\r\n        allWeaknesses\r\n          .filter(weakness => !allResistances.includes(weakness))\r\n          .filter(weakness => !allNoDamages.includes(weakness)),\r\n      ).sort();\r\n\r\n      const resistances = removeDuplicates(\r\n        allResistances.filter(\r\n          resistance => !allWeaknesses.includes(resistance),\r\n        ),\r\n      ).sort();\r\n\r\n      return { weaknesses, resistances };\r\n    },\r\n    [],\r\n  );\r\n\r\n  const getPokemonImage = useCallback((id: string) => {\r\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;\r\n  }, []);\r\n\r\n  const getIdVariantDefault = useCallback((species: PokemonDetails) => {\r\n    const variantDefault = species.varieties.find(\r\n      variety => variety.is_default,\r\n    );\r\n\r\n    return variantDefault\r\n      ? parseInt(\r\n          variantDefault?.pokemon.url.substring(\r\n            34,\r\n            variantDefault?.pokemon.url.length - 1,\r\n          ),\r\n        )\r\n      : 0;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getInitialPokemonList();\r\n  }, [getInitialPokemonList]);\r\n\r\n  return (\r\n    <PokemonContext.Provider\r\n      value={{\r\n        pokemonList,\r\n        setPokemonList,\r\n        getPokemon,\r\n        getEvolutionChain,\r\n        getPokemonInterval,\r\n        getPokemonSearch,\r\n        getContinueSearchList,\r\n        getWeaknessesAndResistances,\r\n        getPokemonImage,\r\n        getIdVariantDefault,\r\n      }}\r\n    >\r\n      {children}\r\n    </PokemonContext.Provider>\r\n  );\r\n};\r\n\r\nfunction usePokemon(): PokemonContextData {\r\n  const context = useContext(PokemonContext);\r\n\r\n  if (!context) {\r\n    throw new Error('usePokemon must be used within a PokemonProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { PokemonProvider, usePokemon };\r\n","import { useCallback, useEffect, useState, FormEvent } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  Title,\r\n  PokemonList,\r\n  MorePokemonArea,\r\n  Loader,\r\n  Form,\r\n  NoMatchingAlert,\r\n} from './styles';\r\n\r\nimport { PokemonItem } from '../../components/PokemonItem';\r\n\r\nimport { usePokemon } from '../../hooks/usePokemon';\r\nimport { useSearch } from '../../hooks/useSearch';\r\nimport { api } from '../../services/api';\r\n\r\ninterface PokemonName {\r\n  name: string;\r\n}\r\n\r\nexport function Dashboard() {\r\n  const {\r\n    pokemonList,\r\n    setPokemonList,\r\n    getPokemonInterval,\r\n    getPokemonSearch,\r\n    getContinueSearchList,\r\n  } = usePokemon();\r\n  const { search, setSearch } = useSearch();\r\n\r\n  const [loading, setLoading] = useState(!pokemonList.length);\r\n  const [hasMorePokemon, setHasMorePokemon] = useState(true);\r\n\r\n  const handleGetMorePokemon = useCallback(async () => {\r\n    setLoading(true);\r\n\r\n    if (search === '')\r\n      await getPokemonInterval(pokemonList.length + 1, pokemonList.length + 52);\r\n    else await getContinueSearchList();\r\n\r\n    setLoading(false);\r\n  }, [getPokemonInterval, getContinueSearchList, pokemonList, search]);\r\n\r\n  const handleSubmitSearch = useCallback(\r\n    async (event: FormEvent<HTMLFormElement>) => {\r\n      event.preventDefault();\r\n      setPokemonList([]);\r\n      setLoading(true);\r\n\r\n      const { data } = await Promise.resolve(api.get('pokemon?limit=898'));\r\n      const listPokemonNames: PokemonName[] = data.results;\r\n\r\n      const matchSearchList = listPokemonNames.filter(pokemon => {\r\n        return pokemon.name.includes(search.toLowerCase());\r\n      });\r\n\r\n      await getPokemonSearch(matchSearchList);\r\n      setLoading(false);\r\n    },\r\n    [search, setPokemonList, getPokemonSearch],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pokemonList.length) setLoading(false);\r\n    setHasMorePokemon(!!pokemonList.length && !(pokemonList.length % 52));\r\n  }, [pokemonList]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>Pokédex</Title>\r\n        <Form onSubmit={handleSubmitSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            <FaSearch\r\n              style={{ marginRight: '5px', transform: 'translateY(2px)' }}\r\n            />\r\n          </button>\r\n        </Form>\r\n      </Header>\r\n      <main>\r\n        <section>\r\n          <PokemonList>\r\n            {pokemonList.map(pokemon => (\r\n              <PokemonItem\r\n                key={pokemon.id}\r\n                pokemon={pokemon}\r\n                sprite={pokemon.sprites.other['official-artwork'].front_default}\r\n              />\r\n            ))}\r\n          </PokemonList>\r\n        </section>\r\n\r\n        {loading && <Loader />}\r\n\r\n        <section>\r\n          {!loading && hasMorePokemon && (\r\n            <MorePokemonArea>\r\n              <button type=\"button\" onClick={handleGetMorePokemon}>\r\n                Load more Pokémon\r\n              </button>\r\n            </MorePokemonArea>\r\n          )}\r\n\r\n          {!loading && !pokemonList.length && (\r\n            <NoMatchingAlert>\r\n              <h3>No Pokémon matches your search!</h3>\r\n            </NoMatchingAlert>\r\n          )}\r\n        </section>\r\n      </main>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport pokeball from '../../assets/pokeball.svg';\r\n\r\ninterface ContainerProps {\r\n  type: string;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  background-color: ${props => `var(--color-${props.type}-type-dark)`};\r\n\r\n  .width_limit {\r\n    max-width: 100%;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n  }\r\n\r\n  .icon_button {\r\n    color: white;\r\n    transition: color 0.2s;\r\n    z-index: 1;\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, 'white')};\r\n    }\r\n\r\n    #arrow_left_icon {\r\n      font-size: 25px;\r\n    }\r\n\r\n    #chevron_left_icon {\r\n      margin-right: 10px;\r\n    }\r\n\r\n    #chevron_right_icon {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  padding: 40px 20px 0 20px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px 20px;\r\n  color: #fff;\r\n  font-weight: bolder;\r\n  font-size: 23px;\r\n\r\n  @media (max-width: 650px) {\r\n    display: block;\r\n    justify-content: center;\r\n    padding: 20px 20px 0 20px;\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n\r\n    li {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 650px) {\r\n    #infos {\r\n      transform: translateY(15px);\r\n    }\r\n\r\n    .icon_button {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    margin-right: 30px;\r\n  }\r\n\r\n  span {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (max-width: 650px) {\r\n    justify-content: space-between;\r\n\r\n    h1 {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PokemonImage = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  div#image-wrap {\r\n    position: relative;\r\n    /* width: 55%; */\r\n    width: 220px;\r\n    height: 220px;\r\n  }\r\n\r\n  img#image-pokemon {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  img#image-pokeball {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 0;\r\n    opacity: 0.4;\r\n    transform: translate(60px, 0);\r\n\r\n    @media (max-width: 650px) {\r\n      transform: translate(60px, -60px);\r\n    }\r\n  }\r\n\r\n  .icon_button {\r\n    display: none;\r\n  }\r\n\r\n  @media (max-width: 650px) {\r\n    transform: translateY(35px);\r\n\r\n    .icon_button {\r\n      display: inline;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  padding: 30px 20px;\r\n\r\n  #firstLine {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 20px;\r\n    margin-bottom: 10px;\r\n\r\n    @media (max-width: 550px) {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n\r\n    @media (max-width: 650px) {\r\n      padding-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VarietySection = styled.section`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n`;\r\n\r\nexport const LoadingContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  margin: 30px auto;\r\n  background: url(${pokeball}) no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  width: 100px;\r\n  height: 100px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n  border-radius: 30px;\r\n  padding: 30px;\r\n  box-shadow: 0px 0px 15px -5px #595959;\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    table-layout: auto;\r\n    margin-top: 15px;\r\n\r\n    td {\r\n      padding: 10px 0;\r\n    }\r\n\r\n    td.feature_name {\r\n      font-weight: bold;\r\n      color: grey;\r\n      vertical-align: top;\r\n    }\r\n\r\n    td.feature_value {\r\n      padding: 0 20px;\r\n      font-weight: bold;\r\n      font-size: 18px;\r\n    }\r\n\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n\r\n      li {\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useCallback } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\nimport { PokemonType } from '../PokemonType';\r\n\r\ninterface PokemonAboutProps {\r\n  description: string | undefined;\r\n  height: number;\r\n  weight: number;\r\n  abilities: Ability[];\r\n  weaknesses: Array<string> | undefined;\r\n  resistances: Array<string> | undefined;\r\n}\r\n\r\ninterface Ability {\r\n  ability: {\r\n    name: string;\r\n  };\r\n  is_hidden: boolean;\r\n}\r\n\r\nexport function PokemonAbout({\r\n  description,\r\n  height,\r\n  weight,\r\n  abilities,\r\n  weaknesses,\r\n  resistances,\r\n}: PokemonAboutProps) {\r\n  const capitalize = useCallback(capitalizeHelper, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>About</h2>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"feature_name\">Description</td>\r\n            <td className=\"feature_value\">\r\n              {description?.replace(/(\\r\\n|\\n|\\r|\\f)/gm, ' ')}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"feature_name\">Height</td>\r\n            <td className=\"feature_value\">{height / 10} m</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"feature_name\">Weight</td>\r\n            <td className=\"feature_value\">{weight / 10} kg</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"feature_name\">Abilities</td>\r\n            <td className=\"feature_value\">\r\n              {abilities\r\n                .filter(ability => !ability.is_hidden)\r\n                .map(ability =>\r\n                  capitalize(ability.ability.name).replace('-', ' '),\r\n                )\r\n                .join(', ')}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"feature_name\">Weaknesses</td>\r\n            <td className=\"feature_value\">\r\n              <ul>\r\n                {weaknesses?.map(weakness => (\r\n                  <PokemonType key={weakness} type={weakness} />\r\n                ))}\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"feature_name\">Resistances</td>\r\n            <td className=\"feature_value\">\r\n              <ul>\r\n                {resistances?.map(resistance => (\r\n                  <PokemonType key={resistance} type={resistance} />\r\n                ))}\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  padding: 30px;\r\n  box-shadow: 0px 0px 15px -5px #595959;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const EvoluationsWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 20px;\r\n\r\n  @media (max-width: 850px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .arrow_right_icon {\r\n    font-size: 50px;\r\n    color: grey;\r\n    align-self: center;\r\n\r\n    @media (max-width: 850px) {\r\n      transform: rotate(90deg);\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Stage = styled.div`\r\n  align-self: center;\r\n\r\n  display: grid;\r\n  grid-gap: 10px;\r\n\r\n  &#firstStage {\r\n    display: inline;\r\n  }\r\n\r\n  &.evolves1 {\r\n    grid-template-rows: repeat(1, 1fr);\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n\r\n  &.evolves2 {\r\n    grid-template-rows: repeat(2, 1fr);\r\n    grid-template-columns: repeat(1, 1fr);\r\n\r\n    @media (max-width: 850px) {\r\n      grid-template-rows: repeat(1, 1fr);\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n\r\n  &.evolves3 {\r\n    grid-template-rows: repeat(1, 1fr);\r\n    grid-template-columns: repeat(3, 1fr);\r\n\r\n    @media (max-width: 850px) {\r\n      grid-template-rows: repeat(2, 1fr);\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n\r\n  &.evolves8 {\r\n    grid-template-rows: repeat(2, 1fr);\r\n    grid-template-columns: repeat(4, 1fr);\r\n\r\n    @media (max-width: 1110px) {\r\n      grid-template-rows: repeat(4, 1fr);\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Evolution = styled.div`\r\n  text-align: center;\r\n  float: left;\r\n  padding: 5px;\r\n  transition: 0.5s;\r\n\r\n  &:hover {\r\n    transform: translate(0, -10px);\r\n    cursor: pointer;\r\n  }\r\n\r\n  img {\r\n    width: 200px;\r\n\r\n    @media (max-width: 850px) {\r\n      width: 55%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n\r\n  h3 {\r\n    margin-right: 10px;\r\n    color: black;\r\n  }\r\n\r\n  span {\r\n    font-weight: 900;\r\n    font-size: 18px;\r\n    opacity: 0.5;\r\n    color: black;\r\n  }\r\n`;\r\n","import { ReactElement, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\n\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\nimport { Container, EvoluationsWrap, Stage, Evolution, Name } from './styles';\r\n\r\nimport { usePokemon } from '../../hooks/usePokemon';\r\n\r\ninterface EvolutionChainProps {\r\n  evolutionChain: EvolutionChain;\r\n}\r\n\r\ninterface EvolutionChain {\r\n  chain: Chain;\r\n}\r\n\r\ninterface Chain {\r\n  evolves_to: Array<Chain>;\r\n  species: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\nexport function PokemonEvoluationChain({\r\n  evolutionChain,\r\n}: EvolutionChainProps) {\r\n  const { getPokemonImage } = usePokemon();\r\n\r\n  const handleEvolves = useCallback(\r\n    (chains: Array<Chain>): ReactElement => {\r\n      if (chains.length) {\r\n        return (\r\n          <>\r\n            <Stage className={`evolves${chains.length}`}>\r\n              {chains.map(evolve => (\r\n                <Link to={`/details/${evolve.species.url.slice(42, -1)}`}>\r\n                  <Evolution>\r\n                    <img\r\n                      src={getPokemonImage(evolve.species.url.slice(42, -1))}\r\n                      alt={evolve.species.name}\r\n                    />\r\n                    <Name>\r\n                      <h3>{capitalizeHelper(evolve.species.name)}</h3>\r\n                      <span>\r\n                        #{`000${evolve.species.url.slice(42, -1)}`.slice(-3)}\r\n                      </span>\r\n                    </Name>\r\n                  </Evolution>\r\n                </Link>\r\n              ))}\r\n            </Stage>\r\n            {!!chains[0].evolves_to.length && (\r\n              <FaChevronRight className=\"arrow_right_icon\" />\r\n            )}\r\n            {chains.map(evolve => handleEvolves(evolve.evolves_to))}\r\n          </>\r\n        );\r\n      }\r\n      return <></>;\r\n    },\r\n    [getPokemonImage],\r\n  );\r\n\r\n  const handleFirstStage = useCallback(\r\n    (chain: Chain) => {\r\n      return (\r\n        <Container>\r\n          <h2>Evolution</h2>\r\n          <EvoluationsWrap>\r\n            <Stage id=\"firstStage\">\r\n              <Link to={`/details/${chain.species.url.slice(42, -1)}`}>\r\n                <Evolution>\r\n                  <img\r\n                    src={getPokemonImage(chain.species.url.slice(42, -1))}\r\n                    alt={chain.species.name}\r\n                  />\r\n                  <Name>\r\n                    <h3>{capitalizeHelper(chain.species.name)}</h3>\r\n                    <span>\r\n                      #{`000${chain.species.url.slice(42, -1)}`.slice(-3)}\r\n                    </span>\r\n                  </Name>\r\n                </Evolution>\r\n              </Link>\r\n            </Stage>\r\n            {!!chain.evolves_to.length && (\r\n              <FaChevronRight className=\"arrow_right_icon\" />\r\n            )}\r\n            {handleEvolves(chain.evolves_to)}\r\n          </EvoluationsWrap>\r\n        </Container>\r\n      );\r\n    },\r\n    [handleEvolves, getPokemonImage],\r\n  );\r\n\r\n  return handleFirstStage(evolutionChain.chain);\r\n}\r\n","import styled from 'styled-components';\r\n\r\ninterface StatBarProps {\r\n  percentage: number;\r\n  type: string;\r\n}\r\n\r\nexport const Container = styled.section`\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  padding: 30px;\r\n  box-shadow: 0px 0px 15px -5px #595959;\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  table {\r\n    width: 100%;\r\n    table-layout: auto;\r\n    margin-top: 15px;\r\n\r\n    td {\r\n      padding: 10px 0;\r\n    }\r\n\r\n    td.stat_name {\r\n      font-weight: bold;\r\n      color: grey;\r\n    }\r\n\r\n    td.stat_value {\r\n      padding: 0 20px;\r\n      text-align: center;\r\n      font-weight: bold;\r\n      font-size: 18px;\r\n    }\r\n\r\n    td.stat_bar {\r\n      width: 100%;\r\n\r\n      div.stat_bar_background {\r\n        width: 100%;\r\n        border-radius: 10px;\r\n        background-color: #e3e3e3;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StatBar = styled.div<StatBarProps>`\r\n  border-radius: 10px;\r\n  background-color: ${props => `var(--color-${props.type}-type-dark)`};\r\n  width: ${props => `${props.percentage}%`};\r\n  height: 100%;\r\n  color: ${props => `var(--color-${props.type}-type-dark)`};\r\n`;\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\n\r\nimport { Container, StatBar } from './styles';\r\n\r\ninterface PokemonStatsProps {\r\n  base_stats: Stat[];\r\n  type: string;\r\n}\r\n\r\ninterface Stat {\r\n  base_stat: number;\r\n  stat: {\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport function PokemonStats({ base_stats, type }: PokemonStatsProps) {\r\n  const capitalize = useCallback(capitalizeHelper, []);\r\n  const [stats, setStats] = useState(base_stats);\r\n\r\n  useEffect(() => {\r\n    setStats(\r\n      base_stats.map(stat => {\r\n        switch (stat.stat.name) {\r\n          case 'special-attack':\r\n            stat.stat.name = 'Sp. Atk';\r\n            break;\r\n          case 'special-defense':\r\n            stat.stat.name = 'Sp. Def';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        return stat;\r\n      }),\r\n    );\r\n  }, [base_stats]);\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Base Stats</h2>\r\n      <table>\r\n        <tbody>\r\n          {stats.map(stat => (\r\n            <tr key={stat.stat.name}>\r\n              <td className=\"stat_name\">{capitalize(stat.stat.name)}</td>\r\n              <td className=\"stat_value\">{stat.base_stat}</td>\r\n              <td className=\"stat_bar\">\r\n                <div className=\"stat_bar_background\">\r\n                  <StatBar\r\n                    percentage={(stat.base_stat / 250) * 100}\r\n                    type={type}\r\n                  >\r\n                    .\r\n                  </StatBar>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td className=\"stat_name\">Total</td>\r\n            <td className=\"stat_value\">\r\n              {stats.reduce((previous, stat) => previous + stat.base_stat, 0)}\r\n            </td>\r\n            <td className=\"stat_bar\">\r\n              <div className=\"stat_bar_background\">\r\n                <StatBar\r\n                  percentage={\r\n                    (stats.reduce(\r\n                      (previous, stat) => previous + stat.base_stat,\r\n                      0,\r\n                    ) *\r\n                      100) /\r\n                    1500\r\n                  }\r\n                  type={type}\r\n                >\r\n                  .\r\n                </StatBar>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { FaArrowLeft, FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\nimport { usePokemon } from '../../hooks/usePokemon';\r\nimport { capitalizeHelper } from '../../helpers/capitalize';\r\n\r\nimport {\r\n  Container,\r\n  Nav,\r\n  Header,\r\n  Title,\r\n  PokemonImage,\r\n  Main,\r\n  LoadingContainer,\r\n  Loader,\r\n} from './styles';\r\n\r\nimport { PokemonAbout } from '../../components/PokemonAbout';\r\nimport { PokemonEvoluationChain } from '../../components/PokemonEvolutionChain';\r\nimport { PokemonStats } from '../../components/PokemonStats';\r\nimport { PokemonType } from '../../components/PokemonType';\r\n\r\nimport imgPokeball from '../../assets/pokeball.svg';\r\n\r\ninterface PokemonDetailsParams {\r\n  id: string;\r\n}\r\n\r\ninterface Pokemon {\r\n  id: number;\r\n  name: string;\r\n  sprites: {\r\n    other: {\r\n      'official-artwork': {\r\n        front_default: string;\r\n      };\r\n    };\r\n  };\r\n  stats: Stat[];\r\n  types: Type[];\r\n  abilities: Ability[];\r\n  height: number;\r\n  weight: number;\r\n}\r\n\r\ninterface Stat {\r\n  base_stat: number;\r\n  stat: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Type {\r\n  slot: number;\r\n  type: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Ability {\r\n  ability: {\r\n    name: string;\r\n  };\r\n  is_hidden: boolean;\r\n}\r\n\r\ninterface PokemonSpecie {\r\n  flavor_text_entries: FlavorTextEntrie[];\r\n  evolution_chain: {\r\n    url: string;\r\n  };\r\n  varieties: Variety[];\r\n}\r\n\r\ninterface EvolutionChain {\r\n  chain: Chain;\r\n}\r\n\r\ninterface Chain {\r\n  evolves_to: Array<Chain>;\r\n  species: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\ninterface FlavorTextEntrie {\r\n  flavor_text: string;\r\n  language: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Variety {\r\n  pokemon: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\nexport function PokemonDetails() {\r\n  const { params } = useRouteMatch<PokemonDetailsParams>();\r\n  const { getPokemon, getWeaknessesAndResistances, getEvolutionChain } =\r\n    usePokemon();\r\n\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>();\r\n  const [pokemonSpecie, setPokemonSpecie] = useState<PokemonSpecie | null>();\r\n  const [pokemonWeaknesses, setPokemonWeaknesses] = useState<Array<string>>();\r\n  const [pokemonResistances, setPokemonResistances] = useState<Array<string>>();\r\n  const [idVariantyDefault] = useState<number>();\r\n  const [pokemonEvolutionChain, setPokemonEvolutionChain] =\r\n    useState<EvolutionChain | null>();\r\n\r\n  const capitalize = useCallback(capitalizeHelper, []);\r\n\r\n  const handleGetPokemon = useCallback(async () => {\r\n    const { pokemonTarget, pokemonSpecies } = await getPokemon(params.id);\r\n\r\n    setPokemon(pokemonTarget);\r\n    setPokemonSpecie(pokemonSpecies);\r\n    const evolutionChain = await getEvolutionChain(pokemonSpecies);\r\n    setPokemonEvolutionChain(evolutionChain);\r\n  }, [params, getEvolutionChain, getPokemon]);\r\n\r\n  const handleGetPokemonWeaknessesAndResistances = useCallback(async () => {\r\n    if (pokemon) {\r\n      const pokemonWeaknessesAndResistances = await getWeaknessesAndResistances(\r\n        pokemon.types,\r\n      );\r\n\r\n      setPokemonWeaknesses(pokemonWeaknessesAndResistances.weaknesses);\r\n      setPokemonResistances(pokemonWeaknessesAndResistances.resistances);\r\n    }\r\n  }, [pokemon, getWeaknessesAndResistances]);\r\n\r\n  useEffect(() => {\r\n    setPokemon(null);\r\n    window.scrollTo(0, 0);\r\n    handleGetPokemon();\r\n  }, [handleGetPokemon]);\r\n\r\n  useEffect(() => {\r\n    handleGetPokemonWeaknessesAndResistances();\r\n  }, [pokemon, handleGetPokemonWeaknessesAndResistances]);\r\n\r\n  return (\r\n    <>\r\n      {!pokemon && (\r\n        <LoadingContainer>\r\n          <Loader />\r\n        </LoadingContainer>\r\n      )}\r\n\r\n      {pokemon && (\r\n        <>\r\n          <Container type={pokemon.types[0].type.name}>\r\n            <Nav className=\"width_limit\">\r\n              <Link className=\"icon_button\" to=\"/\">\r\n                <FaArrowLeft id=\"arrow_left_icon\" />\r\n              </Link>\r\n            </Nav>\r\n            <Header className=\"width_limit\">\r\n              {idVariantyDefault && idVariantyDefault > 1 ? (\r\n                <Link\r\n                  className=\"icon_button\"\r\n                  to={`/details/${idVariantyDefault - 1}`}\r\n                >\r\n                  <FaChevronLeft id=\"chevron_left_icon\" />\r\n                </Link>\r\n              ) : (\r\n                <div />\r\n              )}\r\n              <div id=\"infos\">\r\n                <Title>\r\n                  <h1>{capitalize(pokemon.name)}</h1>\r\n                  <span>#{`000${pokemon.id}`.slice(-3)}</span>\r\n                </Title>\r\n                <ul>\r\n                  {pokemon.types.map(type => (\r\n                    <PokemonType key={type.slot} type={type.type.name} />\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <PokemonImage>\r\n                {idVariantyDefault && idVariantyDefault > 1 ? (\r\n                  <Link\r\n                    className=\"icon_button\"\r\n                    to={`/details/${idVariantyDefault - 1}`}\r\n                  >\r\n                    <FaChevronLeft id=\"chevron_left_icon\" />\r\n                  </Link>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n                <div id=\"image-wrap\">\r\n                  <img\r\n                    id=\"image-pokemon\"\r\n                    src={\r\n                      pokemon.sprites.other['official-artwork'].front_default\r\n                    }\r\n                    alt=\"Pokemon art\"\r\n                  />\r\n                  <img id=\"image-pokeball\" src={imgPokeball} alt=\"pokeball\" />\r\n                </div>\r\n                {idVariantyDefault && idVariantyDefault < 898 ? (\r\n                  <Link\r\n                    className=\"icon_button\"\r\n                    to={`/details/${idVariantyDefault + 1}`}\r\n                  >\r\n                    <FaChevronRight id=\"chevron_right_icon\" />\r\n                  </Link>\r\n                ) : (\r\n                  <div />\r\n                )}\r\n              </PokemonImage>\r\n              {idVariantyDefault && idVariantyDefault < 898 ? (\r\n                <Link\r\n                  className=\"icon_button\"\r\n                  to={`/details/${idVariantyDefault + 1}`}\r\n                >\r\n                  <FaChevronRight id=\"chevron_right_icon\" />\r\n                </Link>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </Header>\r\n          </Container>\r\n          <Main>\r\n            <section id=\"firstLine\">\r\n              <PokemonAbout\r\n                description={\r\n                  pokemonSpecie?.flavor_text_entries.find(\r\n                    text => text.language.name === 'en',\r\n                  )?.flavor_text\r\n                }\r\n                height={pokemon.height}\r\n                weight={pokemon.weight}\r\n                abilities={pokemon.abilities}\r\n                weaknesses={pokemonWeaknesses}\r\n                resistances={pokemonResistances}\r\n              />\r\n              <PokemonStats\r\n                base_stats={pokemon.stats}\r\n                type={pokemon.types[0].type.name}\r\n              />\r\n            </section>\r\n            <section>\r\n              {pokemonEvolutionChain && (\r\n                <PokemonEvoluationChain\r\n                  evolutionChain={pokemonEvolutionChain}\r\n                />\r\n              )}\r\n            </section>\r\n          </Main>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport { Dashboard } from '../pages/Dashboard';\r\nimport { PokemonDetails } from '../pages/PokemonDetails';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Dashboard} />\r\n      <Route path=\"/details/:id\" component={PokemonDetails} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport GlobalStyle from './styles/global';\r\n\r\nimport { Routes } from './routes';\r\n\r\nimport { PokemonProvider } from './hooks/usePokemon';\r\nimport { SearchProvider } from './hooks/useSearch';\r\n\r\nconst App: React.FC = () => (\r\n  <>\r\n    <SearchProvider>\r\n      <PokemonProvider>\r\n        <BrowserRouter>\r\n          <Routes />\r\n        </BrowserRouter>\r\n      </PokemonProvider>\r\n    </SearchProvider>\r\n\r\n    <GlobalStyle />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}